name: CI/CD Pipeline - Microservice App Example

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:6.2
        ports: [ "6379:6379" ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # 1. Java / Maven - users-api
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 8

      - name: Build users-api with Maven
        run: mvn -B -f users-api/pom.xml clean package

      # 2. Node.js - todos-api / frontend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install todos-api deps
        run: cd todos-api && npm install

      - name: Install frontend deps
        run: cd frontend && npm install

      # 3. Python - log-message-processor
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Python deps
        run: cd log-message-processor && pip install -r requirements.txt

      # 4. Go - auth-api
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20

      - name: Build auth-api
        run: cd auth-api && go build -o app

  docker-build-push:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push users-api image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/users-api:latest ./users-api
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/users-api:latest

      - name: Build and push todos-api image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/todos-api:latest ./todos-api
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/todos-api:latest

      - name: Build and push auth-api image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/auth-api:latest ./auth-api
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/auth-api:latest

      - name: Build and push log-message-processor image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/log-message-processor:latest ./log-message-processor
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/log-message-processor:latest

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest ./frontend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest

  deploy:
    needs: docker-build-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run docker-compose
        run: |
          docker-compose -f docker-compose.prod.yml up -d --build
